.TH UARMSOLVER "1" "Novermber 2021" "" "User Commands"
.SH NAME
.B uARMSolver
\(en universal Association Rule Mining Solver
.SH SYNOPSIS
.B uARMSolver
.RB [ \-v | \-? ]
.RB [ \-s\fISETUP_FILE | \-s\ \fISETUP_FILE ]
.SH DESCRIPTION
The framework is written fully in C++ and runs on all platforms.
It allows users to preprocess their data in a transaction database,
to make discretization of data,
to search for association rules
and to guide a presentation/visualization
of the best rules found using external tools.
As opposed to the existing software packages or frameworks,
this also supports numerical and real-valued types of attributes
besides the categorical ones.
Mining the association rules is defined as an optimization
and solved using the nature-inspired algorithms
that can be incorporated easily.
Because the algorithms normally discover a huge amount of association rules,
the framework enables a modular inclusion of so-called visual guiders
for extracting the knowledge hidden in data,
and visualize these using external tools.
.SH OPTIONS
.TP
.B \-h\fR,\ \fB\-?
Show a help message and exit.
.TP
.B \-s\fISETUP_FILE\fR, \fB\-s\ \fISETUP_FILE
Path to a setup file (default
.BR arm.set ).
See the
.B FILES
section for details.
.SH FILES
.SS "SETUP FILE (PROBLEM DEFINITION FILE)"
This section describes how to describes how to configure a universal ARM Solver
.RB ( uARMSolver )
using a setup file. See also the
.B \-s
option.
The setup file consists of three sections, including:
.RS +7n
.IP \(bu 2n
a problem definition,
.IP \(bu 2n
parameter setting of a selected algorithm for solving ARM, and
.IP \(bu 2n
parameter setting of a selected visualization method.
.RE
.P
Let us mention that each line started with
.B %
character denotes a comment
and consequently the corresponding lines are avoided from syntax checking.
.P
Problem definition started with reserved word
.BR Problem ,
where a definitions of specific parameters
follows between curly brackets. 
Each line of parameter definition consists of three parts:
parameter name, equal sign
.BR = ,
and the assigned value.
There are the following parameters:
.RS +7n
.IP \(bu 2n
.B Tdbase_name
=
.IR file_name :
parameter
.I file_name
identifies a path, 
where the transaction database is located,
.IP \(bu 2n
.B Rule_name
=
.IR file_name :
parameter
.I file_name
identifies a path, 
where the existing archive of mined association rules exists,
.IP \(bu 2n
.B Out_name
=
.IR file_name :
parameter
.I file_name
identifies a path, 
where the archive of mined association rules needs to be stored,
.IP \(bu 2n
.B Period
=
.IR integer_value :
parameter
.I integer_value
determines, how many periods are captured by particular archive files.
.RE
.P
Actually, the last parameter determines,
if more transaction databases or archive files
are processed by the solver simultaneously.
Indeed, when the value of the
.B Period
parameter is more than one,
the solver expect that an extension of each specific file
is denotes as a sequence number (e.g.,
.BR .1 ,
.BR .2 ,\ ...,
.BR .k ).
In contrast, when the period is set to one, normally, 
one input file representing the transaction database or ARM archive
is processed.
.P
The algorithm section is devoted for selecting a particular algorithm
in role of ARM solver.
The algorithm selection is realized through a token
.BR Algorithm,
which a mnemonic of the definite algorithm follows.
For instance,
Differential Algorithm is selected using token
.BR DE,
the Particle Swarm Optimization using token
.BR PSO ,
etc.
Interestingly, there exists also selection
.B NONE
determining that no optimization algorithm is used.
In this case, the solver expect ARM archive
produced by the other traditional algorithms (like Apriori),
and focus itself on the visualization section of the process. 
.P
After selecting the appropriate optimization algorithm,
parameter setting determining its behavior follows.
Each parameter setting starts with the mnemonic of the algorithm
to which the word
.B PARAM
is concatenated using a
.B _
character.
Then, parameter setting follows
enclosed between two curly brackets.
For
.B DE
algorithm, we can specify the following parameters
introduced in form of
.IB ALG _ Parameter \ =
.IR Value :
.RS +7n
.IP \(bu 2n
.BI DE_NP\ =
.IR integer_value :
the population size of DE algorithm,
.IP \(bu 2n
.BI DE_FES\ =
.IR integer_value :
the maximum number of fitness function evaluations,
.IP \(bu 2n
.BI DE_RUNS\ =
.IR integer_value :
the maximum number of an independent DE runs,
.IP \(bu 2n
.BI DE_F\ =
.IR float_value :
the scaling factor used by DE mutation strategy,
.IP \(bu 2n
.BI DE_CR\ =
.IR float_value :
the crossover parameter controlling the DE mutation strategy,
.IP \(bu 2n
.BI DE_STRATEGY\ =
.I integer_value
in
.BR [1,12] :
the specific DE mutation strategy.
.RE
.P
Similarly, also parameters of the other optimization algorithms are specified.
.P
Although not implemented yet,
the solver will support also visualization section,
in which an appropriate visualization method is selected
and the parameter setting of the selected method are determined.
Actually, this section is devoted for definition of the algorithm
necessary for preparing data from the ARM archive
that serve for visualization method.
We plan to implement two algorithms for preparing
River flov (token
.BR FLOW )
and Metro map (token
.BR METRO )
visualization methods that can be selected using reserved word
.BR Visualization .
If token
.B NONE
is selected, no visualization preparation is demanded.
.SH EXAMPLES
.in +7x
.EX
.B uARMSolver -s arm.set
.EE
.in
